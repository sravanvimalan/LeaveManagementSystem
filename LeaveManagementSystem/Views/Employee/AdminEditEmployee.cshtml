
@model LeaveManagementSystem.ViewModel.EmployeeViewModel



<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="~/Content/CustomStyleSheet.css">



<form action="/employee/admineditemployee" class="form-validation" method="post" novalidate="novalidate" enctype="multipart/form-data">
    <div class="container ">
        <h3>Register</h3>
        <p>Enter employee details.</p>
        <br> <br>
        <label for="Image">Add Image</label>
        <input type="file" name="Image" id="Image" />
        <br>
        <br> <br> <br> <br>
        @Html.HiddenFor(temp => temp.EmployeeID)
        @Html.HiddenFor(temp => temp.DesignationName)
        @Html.HiddenFor(temp => temp.DepartmentName)
        @Html.HiddenFor(temp => temp.GenderName)
        @Html.HiddenFor(temp => temp.QualificationName)
        @Html.HiddenFor(temp => temp.SelectedGenderID)
        @Html.HiddenFor(temp => temp.SelectedQualificationID)
        @Html.HiddenFor(temp => temp.SelectedDepartmentID)
        @Html.HiddenFor(temp => temp.SelectedDesignationID)
        @Html.HiddenFor(temp=>temp.StartDate)

        <div class="form-row">
            <div class="form-group col-sm-3">
                @Html.LabelFor(temp => temp.FirstName, "First Name")
                @Html.TextBoxFor(temp => temp.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.FirstName, "", new { @class = "text-danger", required = "required" })
            </div>
            <div class="form-group col-sm-3">
                @Html.LabelFor(temp => temp.MiddleName, "Middle Name")
                @Html.TextBoxFor(temp => temp.MiddleName, new { @class = "form-control" })

            </div>


            <div class="form-group col-sm-3">
                @Html.LabelFor(temp => temp.LastName, "Last Name")
                @Html.TextBoxFor(temp => temp.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.LastName, "", new { @class = "text-danger", required = "required" })

            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.EmailID, "Email ID")
                @Html.TextBoxFor(temp => temp.EmailID, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.EmailID, "", new { @class = "text-danger", required = "required" })
                <div class="valid-feedback">looks good</div>
                <div class="invalid-feedback">Invalid email</div>
                <small class="email-exist text-danger"></small>
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.AddressLine1, "Address Line 1")
                @Html.TextBoxFor(temp => temp.AddressLine1, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.AddressLine1, "", new { @class = "text-danger", required = "required" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.AddressLine2, "Address Line 2")
                @Html.TextBoxFor(temp => temp.AddressLine2, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.AddressLine3, "Address Line 3")
                @Html.TextBoxFor(temp => temp.AddressLine3, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-row">

            <div class="form-group col-sm-9">

                @Html.LabelFor(temp => temp.MobileNumber, "Mobile Number")
                @Html.TextBoxFor(temp => temp.MobileNumber, new { pattern = "^[789]\\d{9}$", required = "required", @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.MobileNumber, "", new { @class = "text-danger", required = "required" })
                <div class="valid-feedback">looks good</div>
                <div class="invalid-feedback">Invalid mobile number</div>
                <small class="mobile-exist text-danger"></small>
            </div>
            <div class="form-group col-sm-9">

                @Html.LabelFor(temp => temp.Nationality, "Nationality")
                @Html.TextBoxFor(temp => temp.Nationality, new { required = "required", @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.Nationality, "", new { @class = "text-danger",@value=Model.Nationality,required = "required" })

            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(temp => temp.DateOfBirth, "Date Of Birth")
                 @Html.TextBoxFor(model => model.DateOfBirth,
               new { @type = "date", @Value = Model.DateOfBirth.ToString("yyyy-MM-dd"), @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(temp => temp.DateOfBirth, "", new { @class = "text-danger", required = "required" })

            </div>
            <div class="form-group col-sm-1">

            </div>
            <div class="form-group col-sm-4">
                @Html.HiddenFor(temp => temp.Gender)
                @Html.LabelFor(temp => temp.SelectedGenderID, "Gender")
                @Html.DropDownListFor(temp => temp.SelectedGenderID, Model.GenderList, Model.GenderName, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.SelectedGenderID, "", new { @class = "text-danger", required = "required" })
                <br><br>
            </div>
        </div>
        <br /><br />
        <fieldset>
            <legend>Experience</legend>

            <div class="form-row">
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.Experience.CompanyName, "Company Name")
                    @Html.TextBoxFor(temp => temp.Experience.CompanyName, new { @class = "form-control" })
                </div>
                <div class="form-group col-sm-1">

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.Experience.JobRole, "Job Role")
                    @Html.TextBoxFor(temp => temp.Experience.JobRole, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.Experience.StartDate, "Start Date")
                    @if (Model.Experience != null)
                    {
                        @Html.TextBoxFor(model => model.Experience.StartDate,
                     new { @type = "date", @Value = Model.Experience.StartDate.ToString("yyyy-MM-dd"), @class = "form-control", required = "required" })
                    
                    }

                    else
                    {
                    @Html.TextBoxFor(model => model.Experience.StartDate,
                                                  new { @type = "date", @class = "form-control" })
                    }


                </div>
                <div class="form-group col-sm-1">

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.Experience.EndDate, "End Date")
                    @if (Model.Experience != null)
                    {
                        @Html.TextBoxFor(model => model.Experience.EndDate,
             new { @type = "date", @Value = Model.Experience.EndDate.ToString("yyyy-MM-dd"), @class = "form-control", required = "required" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.Experience.EndDate,
                     new { @type = "date", @class = "form-control" })
                    }

                    <br><br>
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Company</legend>
            <div class="form-row">
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.JoinDate, "Join Date")
                    @Html.TextBoxFor(model => model.JoinDate,
              new { @type = "date", @Value = Model.JoinDate.ToString("yyyy-MM-dd"), @class = "form-control", required = "required" })
                </div>
                <div class="form-group col-sm-1">

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.SelectedQualificationID, "Qualification")
                    @Html.DropDownListFor(temp => temp.SelectedQualificationID, Model.QualificationList, Model.QualificationName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.SelectedQualificationID, "", new { @class = "text-danger", required = "required" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.SelectedDepartmentID, "Department")
                    @Html.DropDownListFor(temp => temp.SelectedDepartmentID, Model.DepartmentList, Model.DepartmentName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.SelectedDepartmentID, "", new { @class = "text-danger", required = "required" })
                </div>
                <div class="form-group col-sm-1">

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.SelectedDesignationID, "Designation")
                    @Html.DropDownListFor(temp => temp.SelectedDesignationID, Model.DesignationList, Model.DesignationName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.SelectedDesignationID, "", new { @class = "text-danger", required = "required" })
                </div>
            </div>
            @if (Model.DepartmentName == "HR")
            {
                @Html.LabelFor(temp => temp.IsSpecialPermission, "Special Permission")
                @Html.CheckBoxFor(temp => temp.IsSpecialPermission, new { @class = "form-control" })
            }
            <br />

            @Html.LabelFor(temp => temp.EmployeeStatus, "Employee Status")
            @Html.CheckBoxFor(temp => temp.EmployeeStatus, new { @class = "form-control" })


            <br /> <br />
        </fieldset>
        <div class="form-row">
            <div class="form-group  col-sm-3">

                <button type="submit" class="btn btn-info">Save And Update</button>
            </div>

        </div>
    </div>


</form>

@*<script>

        $(document).ready(function () {
            $("#Password2").blur(validate);
            function validate(event) {
                var password1 = $("#Password").val();
                var password2 = $("#Password2").val();

                if (password1 == password2) {
                    $("#validate-status").text("match").css("color","green");
                }
                else {
                    $("#validate-status").text("not match").css("color", "red");
                }

            }
        });






        $(document).on("submit", ".form-validation", validation);
        $(".form-validation,input").blur(validation);
        function validation(event) {
            if ($(".form-validation")[0].checkValidity() == false) {
                event.preventDefault();
            }
            $(".form-validation")[0].classList.add("was-validated");
        }








        $("#MobileNumber").blur(
            function () {
                $.ajax(
                    {
                        url: "/employee/getmobile?mobile=" + $("#MobileNumber").val(),
                        type: "GET",
                        success: function (response) {
                            if (response == "found") {
                                $(".mobile-exist").text("Mobile number already exist");
                                $(".mobile-exist").parent(".form-group").find(".valid-feedback").css("color", "white");
                            }
                            else {
                                $(".mobile-exist").text(" ");
                                $(".mobile-exist").parent(".form-group").find(".valid-feedback").css("color", "green");
                            }
                        },
                        error: function () {
                            alert("Error occured")
                        }
                    }

                )
            });


        $("#EmailID").blur(
            function () {
                $.ajax(
                    {
                        url: "/employee/getemail?email=" + $("#EmailID").val(),
                        type: "GET",
                        success: function (response) {
                            if (response == "found") {
                                $(".email-exist").text("Email already exist");
                                $(".email-exist").parent(".form-group").find(".valid-feedback").css("color", "white");
                            }
                            else {
                                $(".email-exist").text("");
                                $(".email-exist").parent(".form-group").find(".valid-feedback").css("color", "green");
                            }
                        },
                        error: function () {
                            alert("Error occured")
                        }
                    }

                )
            });
    </script>*@

