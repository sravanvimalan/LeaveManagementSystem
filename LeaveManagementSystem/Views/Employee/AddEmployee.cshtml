
@model LeaveManagementSystem.ViewModel.ViewModel.AddEmployeeViewModel



<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="~/Content/CustomStyleSheet.css">



<form action="/employee/addemployee" class="form-validation" method="post" novalidate="novalidate" enctype="multipart/form-data">
    <div class="container ">
        <h3>Register</h3>
        <p>Enter employee details.</p>
        <br> <br>
        <label for="Image">Add Image</label>
        <input type="file" name="Image" id="Image" />
        <br>
        <br> <br> <br> <br>
        @Html.HiddenFor(temp=>temp.EmployeeID)
        <div class="form-row">
            <div class="form-group col-sm-3">
                @Html.LabelFor(temp => temp.FirstName,"First Name")
                @Html.TextBoxFor(temp => temp.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.FirstName, "", new { @class = "text-danger", required = "required" })
            </div>
            <div class="form-group col-sm-3">
                @Html.LabelFor(temp => temp.MiddleName,"Middle Name")
                @Html.TextBoxFor(temp => temp.MiddleName, new { @class = "form-control" })

            </div>


            <div class="form-group col-sm-3">
                @Html.LabelFor(temp => temp.LastName,"Last Name")
                @Html.TextBoxFor(temp => temp.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.LastName, "", new { @class = "text-danger", required = "required" })

            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.EmailID, "Email ID")
                @Html.TextBoxFor(temp => temp.EmailID, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.EmailID, "", new { @class = "text-danger", required = "required" })
                <div class="valid-feedback">looks good</div>
                <div class="invalid-feedback">Invalid email</div>
                <small class="email-exist text-danger"></small>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(temp => temp.Password)
                @Html.PasswordFor(temp => temp.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.Password, "", new { @class = "text-danger", required = "required" })
            </div>
            <div class="form-group col-sm-1">

            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(temp => temp.ConfirmPassword,"Confirm Password")
                @Html.PasswordFor(temp => temp.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.ConfirmPassword, "", new { @class = "text-danger", required = "required" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.AddressLine1,"Address")
                @Html.TextBoxFor(temp => temp.AddressLine1, new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.AddressLine1, "", new { @class = "text-danger", required = "required" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.AddressLine2,"Address")
                @Html.TextBoxFor(temp => temp.AddressLine2, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(temp => temp.AddressLine3,"Address")
                @Html.TextBoxFor(temp => temp.AddressLine3, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-row">

            <div class="form-group col-sm-9">

                @Html.LabelFor(temp => temp.MobileNumber, "Mobile Number")
                @Html.TextBoxFor(temp => temp.MobileNumber, new { pattern = "^[789]\\d{9}$", required = "required", @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.MobileNumber, "", new { @class = "text-danger", required = "required" })
                <div class="valid-feedback">looks good</div>
                <div class="invalid-feedback">Invalid mobile number</div>
                <small class="mobile-exist text-danger"></small>
            </div>
            <div class="form-group col-sm-9">

                @Html.LabelFor(temp => temp.Nationality, "Nationality")
                @Html.TextBoxFor(temp => temp.Nationality, new {  required = "required", @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.Nationality, "", new { @class = "text-danger", required = "required" })
                
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(temp => temp.DateOfBirth,"Date Of Birth")
                @Html.TextBoxFor(model => model.DateOfBirth,
         new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.DateOfBirth, "", new { @class = "text-danger", required = "required" })

            </div>
            <div class="form-group col-sm-1">

            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(temp => temp.SelectedGenderId, "Gender")
                @Html.DropDownListFor(temp => temp.SelectedGenderId, Model.GenderList, "Select Gender", new { @class = "form-control" })
                @Html.ValidationMessageFor(temp => temp.SelectedGenderId, "", new { @class = "text-danger", required = "required" })
                <br><br>
            </div>
        </div>
        <br /><br />
              <fieldset>
                  <legend>Experience</legend>
                  <div class="form-row">
                      <div class="form-group col-sm-4">
                          @Html.LabelFor(temp => temp.Experience.CompanyName, "Company Name")
                          @Html.TextBoxFor(temp => temp.Experience.CompanyName, new { @class = "form-control" })
                      </div>
                      <div class="form-group col-sm-1">

                      </div>
                      <div class="form-group col-sm-4">
                          @Html.LabelFor(temp => temp.Experience.JobRole, "Job Role")
                          @Html.TextBoxFor(temp => temp.Experience.JobRole, new { @class = "form-control" })
                      </div>
                  </div>

                  <div class="form-row">
                      <div class="form-group col-sm-4">
                          @Html.LabelFor(temp => temp.Experience.StartDate, "Start Date")
                          @Html.TextBoxFor(model => model.Experience.StartDate,
                   new { @type = "date", @class = "form-control" })

                      </div>
                      <div class="form-group col-sm-1">

                      </div>
                      <div class="form-group col-sm-4">
                          @Html.LabelFor(temp => temp.Experience.EndDate, "End Date")
                          @Html.TextBoxFor(model => model.Experience.EndDate,
                   new { @type = "date", @class = "form-control" })
                          <br><br>
                      </div>
                  </div>
              </fieldset>
        <fieldset>
            <legend>Company</legend>
            <div class="form-row">
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.JoinDate,"Join Date")
                    @Html.TextBoxFor(model => model.JoinDate,
             new { @type = "date", @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.JoinDate, "", new { @class = "text-danger", required = "required" })
                </div>
                <div class="form-group col-sm-1">

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.SelectedQualificationId, "Qualification")
                    @Html.DropDownListFor(temp => temp.SelectedQualificationId, Model.QualificationList, "Select Qualification", new { @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.SelectedQualificationId, "", new { @class = "text-danger", required = "required" })
                </div>
            </div>
          
            <div class="form-row">
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.SelectedDepartmentId, "Department")
                    @Html.DropDownListFor(temp => temp.SelectedDepartmentId, Model.DepartmentList, "select Department", new { @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.SelectedDepartmentId, "", new { @class = "text-danger", required = "required" })
                </div>
                <div class="form-group col-sm-1">

                </div>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(temp => temp.SelectedDesignationId, "Designation")
                    @Html.DropDownListFor(temp => temp.SelectedDesignationId, Model.DesignationList, "select Designation", new { @class = "form-control" })
                    @Html.ValidationMessageFor(temp => temp.SelectedDesignationId, "", new { @class = "text-danger", required = "required" })
                </div>
            </div>
            
         
            @Html.HiddenFor(temp=>temp.EmployeeStatus)
            



        </fieldset>
        <br />
        <br />
        <div class="form-row">
            <div class="form-group  col-sm-3">

                <button type="submit" class="btn btn-info">Save</button>
            </div>

        </div>
    </div>
    

</form>

<script>

    $("#MobileNumber").dblclick(
        function () {
            $.ajax(
                {
                    url: "/employee/getmobile?mobile=" + $("#MobileNumber").val(),
                    type: "GET",
                    success: function (msg) {
                        if (msg == "found") {
                            $(".mobile-exist").text("Mobile number already exist");
                            $(".mobile-exist").parent(".form-group").find(".valid-feedback").css("color", "white");
                            alert(msg + "f");
                        }
                        else {
                            $(".mobile-exist").text(" ");
                            $(".mobile-exist").parent(".form-group").find(".valid-feedback").css("color", "green");
                            alert(msg + "n");
                        }
                    },
                    error: function () {
                        alert("error occured");
                    }
                }

            )
        });

  

    //$(document).ready(function () {
    //    $("#Password2").blur(validate);
    //    function validate(event) {
    //        var password1 = $("#Password").val();
    //        var password2 = $("#Password2").val();

    //        if (password1 == password2) {
    //            $("#validate-status").text("match").css("color","green");
    //        }
    //        else {
    //            $("#validate-status").text("not match").css("color", "red");
    //        }

    //    }
    //});


   



    //$(document).on("submit", ".form-validation", validation);
    //$(".form-validation,input").blur(validation);
    //function validation(event) {
    //    if ($(".form-validation")[0].checkValidity() == false) {
    //        event.preventDefault();
    //    }
    //    $(".form-validation")[0].classList.add("was-validated");
    //}








   


    $("#EmailID").blur(
        function () {
            $.ajax(
                {
                    url: "/employee/getemail?email=" + $("#EmailID").val(),
                    type: "GET",
                    success: function (response) {
                        if (response == "found") {
                            $(".email-exist").text("Email already exist");
                            $(".email-exist").parent(".form-group").find(".valid-feedback").css("color", "white");
                        }
                        else {
                            $(".email-exist").text("");
                            $(".email-exist").parent(".form-group").find(".valid-feedback").css("color", "green");
                        }
                    },
                    error: function () {
                        alert("Error occured")
                    }
                }

            )
        });
</script>

